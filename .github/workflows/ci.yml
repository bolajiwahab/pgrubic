---
# yamllint disable rule:line-length
name: CI

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - linting
          - isort
          - formatting
          - typing
          - docbuild
          - ensure-docs-up-to-date
    name: ${{ matrix.job }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: pip install tox
      - name: Run ${{ matrix.job }}
        run: tox -e ${{ matrix.job }}

  tests-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.12
          - 3.13
    name: tests-windows-python-${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install tox
      - name: Run tests
        run: tox -e tests-windows

  tests-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.12
          - 3.13
    name: tests-linux-python-${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install tox
      - name: Run tests
        run: tox -e tests-linux

  tests-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.12
          - 3.13
    name: tests-macos-python-${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install tox
      - name: Run tests
        run: tox -e tests-macos

  coverage:
    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install tox

      - name: Run coverage
        run: tox -e coverage

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MAX_FILES_IN_COMMENT: 120

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
